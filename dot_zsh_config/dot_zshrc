# ZSH configuration file

export CONFIG_PATH=$HOME/.zsh_config

# echo "using config in ${CONFIG_PATH}"

# Check if a command exists
function can_haz() {
  which "$@" > /dev/null 2>&1
}


# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Uncomment following line if you want red dots to be displayed while waiting for completion
export COMPLETION_WAITING_DOTS="true"

# Correct spelling for commands
setopt correct

# turn off the infernal correctall for filenames
unsetopt correctall

# Base PATH
PATH="$PATH:/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin"

# Conditional PATH additions
for path_candidate in /Applications/Xcode.app/Contents/Developer/usr/bin \
  /opt/homebrew/bin \
  /opt/homebrew/sbin \
  /home/linuxbrew/.linuxbrew/bin \
  /home/linuxbrew/.linuxbrew/sbin \
  /opt/local/bin \
  /opt/local/sbin \
  /usr/local/bin \
  /usr/local/sbin \
  ~/.cabal/bin \
  ~/.cargo/bin \
  ~/.rbenv/bin \
  ~/bin \
  ~/src/gocode/bin \
  ~/gocode \
  ~/.local/bin
do
  if [[ -d "${path_candidate}" ]]; then
    path+=("${path_candidate}")
  fi
done
export PATH

# We will dedupe $PATH after loading ~/.zshrc.d/* so that any duplicates
# added there get deduped too.

# Start zgenom
if [ -f ${CONFIG_PATH}/.zgen-setup ]; then
  source ${CONFIG_PATH}/.zgen-setup
fi

# Set some history options
#
# You can customize these by putting a file in ~/.zshrc.d with
# different settings - those files are loaded later specifically to
# make overriding these (and things set by plugins) easy without having
# to maintain a fork.
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt hist_verify
setopt INC_APPEND_HISTORY
unsetopt HIST_BEEP

# Share your history across all your terminal windows
setopt share_history
#setopt noclobber

# Keep a ton of history. You can override these without editing .zshrc by
# adding a file to ~/.zshrc.d that changes these variables.
HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"

# Set some options about directories
setopt pushd_ignore_dups
#setopt pushd_silent
setopt AUTO_CD  # If a command is issued that canâ€™t be executed as a normal command,
                # and the command is the name of a directory, perform the cd command
                # to that directory.

# Add some completions settings
setopt ALWAYS_TO_END     # Move cursor to the end of a completed word.
setopt AUTO_LIST         # Automatically list choices on ambiguous completion.
setopt AUTO_MENU         # Show completion menu on a successive tab press.
setopt AUTO_PARAM_SLASH  # If completed parameter is a directory, add a trailing slash.
setopt COMPLETE_IN_WORD  # Complete from both ends of a word.
unsetopt MENU_COMPLETE   # Do not autoselect the first completion entry.

# Miscellaneous settings
setopt INTERACTIVE_COMMENTS  # Enable comments in interactive shell.

setopt extended_glob # Enable more powerful glob features

# Long running processes should return time after they complete. Specified
# in seconds.
REPORTTIME=2
TIMEFMT="%U user %S system %P cpu %*Es total"

# How often to check for an update. If you want to override this, the
# easiest way is to add a script fragment in ~/.zshrc.d that unsets
# QUICKSTART_KIT_REFRESH_IN_DAYS.
QUICKSTART_KIT_REFRESH_IN_DAYS=7

# Disable Oh-My-ZSH's internal updating. Let it get updated when user
# does a zgen update. Closes #62.
DISABLE_AUTO_UPDATE=true

# Expand aliases inline - see http://blog.patshead.com/2012/11/automatically-expaning-zsh-global-aliases---simplified.html
globalias() {
   if [[ $LBUFFER =~ ' [A-Z0-9]+$' ]]; then
     zle _expand_alias
     zle expand-word
   fi
   zle self-insert
}

zle -N globalias

bindkey " " globalias
bindkey "^ " magic-space           # control-space to bypass completion
bindkey -M isearch " " magic-space # normal space during searches

# Make it easier to customize the quickstart to your needs without
# having to maintain your own fork.

# Stuff that works on bash or zsh
if [ -r ${CONFIG_PATH}/.sh_aliases ]; then
  source ${CONFIG_PATH}/.sh_aliases
fi

# Stuff only tested on zsh, or explicitly zsh-specific
if [ -r ${CONFIG_PATH}/.zsh_aliases ]; then
  source ${CONFIG_PATH}/.zsh_aliases
fi

if [ -r ${CONFIG_PATH}/.zsh_functions ]; then
  source ${CONFIG_PATH}/.zsh_functions
fi

export LOCATE_PATH=/var/db/locate.database

# grc colorizes the output of a lot of commands. If the user installed it,
# use it.

# Try and find the grc setup file
if (( $+commands[grc] )); then
  GRC_SETUP='/usr/local/etc/grc.bashrc'
fi
if (( $+commands[grc] )) && (( $+commands[brew] ))
then
  GRC_SETUP="$(brew --prefix)/etc/grc.bashrc"
fi
if [[ -r "$GRC_SETUP" ]]; then
  source "$GRC_SETUP"
fi
unset GRC_SETUP

if (( $+commands[grc] ))
then
  function ping5(){
    grc --color=auto ping -c 5 "$@"
  }
else
  alias ping5='ping -c 5'
fi

# These need to be done after $PATH is set up so we can find
# grc and exa

# Set up colorized ls when gls is present - it's installed by grc
# shellcheck disable=SC2154
if (( $+commands[gls] )); then
  alias ls="gls -F --color"
  alias l="gls -lAh --color"
  alias ll="gls -l --color"
  alias la='gls -A --color'
fi


# When present, use exa instead of ls
if can_haz exa; then
  if [[ -z "$EXA_TREE_IGNORE" ]]; then
    EXA_TREE_IGNORE=".cache|cache|node_modules|vendor|.git"
  fi

  alias l='exa -al --icons --git --time-style=long-iso --group-directories-first --color-scale'
  alias ls='exa --group-directories-first'

  # Don't step on system-installed tree command
  if ! can_haz tree; then
    alias tree='exa --tree'
  fi
fi

# Speed up autocomplete, force prefix mapping
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
zstyle -e ':completion:*:default' list-colors 'reply=("${PREFIX:+=(#bi)($PREFIX:t)*==34=34}:${(s.:.)LS_COLORS}")';

# Load any custom zsh completions we've installed
if [[ -d ~/.zsh-completions ]]; then
  for completion in ~/.zsh-completions/*
  do
    if [[ -r "$completion" ]]; then
      source "$completion"
    else
      echo "Can't read $completion"
    fi
  done
fi

# Load zmv
if [[ ! -f ${CONFIG_PATH}/.zsh-quickstart-no-zmv ]]; then
  autoload -U zmv
fi

# Make it easy to append your own customizations that override the
# quickstart's defaults by loading all files from the ~/.zshrc.d directory
mkdir -p ${CONFIG_PATH}/.zshrc.d
if [ -n "$(/bin/ls -A ${CONFIG_PATH}/.zshrc.d)" ]; then
  for dotfile in $(/bin/ls -A ${CONFIG_PATH}/.zshrc.d)
  do
    if [ -r ${CONFIG_PATH}/.zshrc.d/$dotfile ]; then
      source ${CONFIG_PATH}/.zshrc.d/$dotfile
    fi
  done
fi

# Now that .zshrc.d has been processed, we dedupe $PATH using a ZSH builtin
# https://til.hashrocket.com/posts/7evpdebn7g-remove-duplicates-in-zsh-path
typeset -aU path;

# Do selfupdate checking. We do this after processing ~/.zshrc.d to make the
# refresh check interval easier to customize.
#
# If they unset QUICKSTART_KIT_REFRESH_IN_DAYS in one of the fragments
# in ~/.zshrc.d, then we don't do any selfupdate checking at all.

_load-lastupdate-from-file() {
  local now=$(date +%s)
  if [[ -f "${1}" ]]; then
    local last_update=$(cat "${1}")
  else
    local last_update=0
  fi
  local interval="$(expr ${now} - ${last_update})"
  echo "${interval}"
}

_update-zsh-quickstart() {
  if [[ ! -L ${CONFIG_PATH}/.zshrc ]]; then
    echo ".zshrc is not a symlink, skipping zsh-quickstart-kit update"
  else
    local _link_loc=$(readlink ~/.zshrc);
    if [[ "${_link_loc/${HOME}}" == "${_link_loc}" ]]; then
      pushd $(dirname "${HOME}/$(readlink ~/.zshrc)");
    else
      pushd $(dirname ${_link_loc});
    fi;
      local gitroot=$(git rev-parse --show-toplevel)
      if [[ -f "${gitroot}/.gitignore" ]]; then
        if [[ $(grep -c zsh-quickstart-kit "${gitroot}/.gitignore") -ne 0 ]]; then
          echo "---- updating ----"
          # Cope with switch from master to main
          zqs_current_branch=$(git rev-parse --abbrev-ref HEAD)
          git fetch
          # Determine the repo default branch and switch to it
          zqs_default_branch="$(git remote show origin | grep 'HEAD branch' | awk '{print $3}')"
          if [[ "$zqs_default_branch" != "$zqs_current_branch" ]]; then
            echo "The ZSH Quickstart Kit has switched default branches to $zqs_default_branch"
            echo "Changing branches in your local checkout from $zqs_current_branch to $zqs_default_branch"
            git checkout "$zqs_default_branch"
          fi
          git pull
          date +%s >! ~/.zsh-quickstart-last-update
          unset zqs_default_branch
          unset zqs_current_branch
        fi
      else
        echo 'No quickstart marker found, is your quickstart a valid git checkout?'
      fi
    popd
  fi
}

_check-for-zsh-quickstart-update() {
  local day_seconds=$(expr 24 \* 60 \* 60)
  local refresh_seconds=$(expr "${day_seconds}" \* "${QUICKSTART_KIT_REFRESH_IN_DAYS}")
  local last_quickstart_update=$(_load-lastupdate-from-file ~/.zsh-quickstart-last-update)

  if [ ${last_quickstart_update} -gt ${refresh_seconds} ]; then
    echo "It has been $(expr ${last_quickstart_update} / ${day_seconds}) days since your zsh quickstart kit was updated"
    echo "Checking for zsh-quickstart-kit updates..."
    _update-zsh-quickstart
  fi
}

if [[ ! -z "$QUICKSTART_KIT_REFRESH_IN_DAYS" ]]; then
  # _check-for-zsh-quickstart-update
  # unset QUICKSTART_KIT_REFRESH_IN_DAYS
fi

# Fix bracketed paste issue
# Closes #73
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(bracketed-paste)

# To customize your prompt, run `p10k configure` or edit ~/.p10k.zsh.
if [[ ! -f ${CONFIG_PATH}/.p10k.zsh ]]; then
  echo "Run p10k configure or edit ${CONFIG_PATH}/.p10k.zsh to configure your prompt"
else
  source ${CONFIG_PATH}/.p10k.zsh
fi

# Set default editors
if command -v micro &> /dev/null
then
  export EDITOR=$(which micro)
  export VISUAL=$(which micro)
else
  export EDITOR=$(which nano)
  export VISUAL=$(which nano)
fi

unset CONFIG_PATH

